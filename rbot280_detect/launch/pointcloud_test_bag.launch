<?xml version="1.0"?>

<launch>                                                                                                                        
                                                                                                                                
  <arg name="bag_file" default="/home/mikedef/data/driving-to-dock.bag" />                
  <arg name="start" default="0" />                       
  <node pkg="rosbag" name="play" type="play"
	args="--clock -l -s $(arg start) $(arg bag_file)" />                   

  <arg name="rviz_config" default="$(find rbot280)/rviz/wamv_.rviz" />                                 
  <node pkg="rviz" type="rviz"                                                                           
        name="wamv_visualization" args="-d $(arg rviz_config)" />

    <!-- launch camera filter for pc -->                                                                                           
  <group ns="/wamv/sensors/lidars" >                                                                                               
    <include                                                                                                                       
        file="$(find rbot280_detect)/launch/pointcloud_camera_filter.launch" >                                                     
      <arg name="pc_topic" value="/wamv/sensors/lidars/lidar_wamv/points" />                                                       
      <arg name="camera_hfov" value="80" />                                                                                       
      <arg name="camera_theta" value="0.0" />
      <arg name="leaf_size" value="0.1" />
    </include>                                                                                                                     
  </group>

  
  <node name='image_throttler' type='throttle' pkg='topic_tools'                                        
        args='messages /wamv/sensors/cameras/front_center_camera/image_raw 10.0 /wamv/sensors/cameras/front_center_camera/image_raw/throttled' /> 
  <arg name='darknet_py' default='true' />                                             
  <node name="rbot_280_classification" pkg="rbot280_detect" type="darknet_node2.py"    
        required="true" output="screen" if="$(arg darknet_py)">                
    <remap from="~0/input"                                            
           to="/wamv/sensors/cameras/front_center_camera/image_raw/throttled" />
     <rosparam>                                                                       
      n_inputs: 1                                                      
      classes: [object]
      darknet_config_file: "/home/mikedef/data/yolo/custom-yolov4-detector.cfg"         
      darknet_weights_file: "/home/mikedef/data/yolo/object-yolov4-detector_best_1.weights"    
      darknet_data_file: "/home/mikedef/data/yolo/object-yolov4.data"        
      darknet_thresh: 0.2  
      darknet_hier_thresh: 0.4                                        
      darknet_nms: 0.35                                                                   
      use_sim_time: "true" 
    </rosparam>                                                                                  
  </node> 

  <!-- Launch pointcloud image overlay  -->
  <node pkg="rbot280_detect" name="pointcloud_image_overlay"
	type="pointcloud_image_overlay"
	output="screen" >
    <!-- <param name="img_src" value="/wamv/sensors/cameras/front_center_camera/image_raw" /> -->
    <!-- <param name="img_src" value="/wamv/sensors/cameras/front_center_camera/image_raw/throttled" /> -->
    <param name="img_src" value="rbot_280_classification/0/image" /> 
    <param name="img_info_src" value="/wamv/sensors/cameras/front_center_camera/camera_info" />
    <param name="cloud_src" value="/wamv/sensors/lidars/lidar_wamv/points/camera_FOV_cloud" /> 
  </node>

    <!-- Lidar clustering -->                
  <group ns="lidar_clustering">                                                                         
    <node pkg="pointcloud_cluster_detect"                                                               
          type="pointcloud_euclidean_cluster_detect"                                                    
          name="pointcloud_euclidean_cluster_detect"                                                    
          output="screen" >                                                                             
      <param name="pc_topic" value="/velodyne_points"/>                                                 
      <rosparam                                                                                         
        file="$(find rbot280_detect)/params/lidar-clustering.yaml" />                                   
    </node>                                                                                             
  </group>
  
  <!-- launch rviz, static joint transforms, revolute joint static transforms 
  <include file="$(find wamv_gazebo)/launch/rviz_vrx.launch" />  -->                                                          
                                                                                                                                        
  <!-- launch robot_localization 
       <include file="$(find wamv_gazebo)/launch/localization_example.launch" /> -->

  <!-- Load robot model 
  <arg name="urdf" default="$(find rbot280)/config/my_wamv.urdf"/>
  <arg name="thrust_config" default="H" />
  <arg name="camera_enabled"       default="true" />                                                                                   
  <arg name="gps_enabled"          default="true" />                                                                                   
  <arg name="imu_enabled"          default="true" />                                                                                   
  <arg name="lidar_enabled"        default="true" />                                                                                   
  <arg name="ground_truth_enabled" default="true" />
  <arg name="namespace" default="wamv"/> 

  <param name="$(arg namespace)/robot_description"                                                                                      
         command="$(find xacro)/xacro &#x002D;-&#x002D;-inorder '$(arg urdf)'                                                           
         thruster_config:=$(arg thrust_config)                                                                                          
         camera_enabled:=$(arg camera_enabled)                                                                                          
         gps_enabled:=$(arg gps_enabled)                                                                                                
         imu_enabled:=$(arg imu_enabled)                                                                                                
         lidar_enabled:=$(arg lidar_enabled)                                                                                            
         ground_truth_enabled:=$(arg ground_truth_enabled)                                                                              
         namespace:=$(arg namespace) "/>    
  -->
</launch> 
